config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

go_mod_download(
    name = "github.com__aws__aws-sdk-go",
    _tag = "download",
    module = "github.com/aws/aws-sdk-go",
    version = "v1.36.1",
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__arn",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/arn"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__awserr",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/awserr"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__awsutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/awsutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__jmespath__go-jmespath"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__client",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/client"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkrand",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__client__metadata",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/client/metadata"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__corehandlers",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/corehandlers"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__internal__ini",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
        ":github.com__aws__aws-sdk-go__internal__sync__singleflight",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__ec2rolecreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/ec2rolecreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__ec2metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkuri",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__endpointcreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/endpointcreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__processcreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/processcreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__stscreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/stscreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkrand",
        ":github.com__aws__aws-sdk-go__service__sts",
        ":github.com__aws__aws-sdk-go__service__sts__stsiface",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__csm",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/csm"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__defaults",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/defaults"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__credentials__ec2rolecreds",
        ":github.com__aws__aws-sdk-go__aws__credentials__endpointcreds",
        ":github.com__aws__aws-sdk-go__aws__ec2metadata",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__ec2metadata",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/ec2metadata"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkuri",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__endpoints",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/endpoints"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__awserr"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__request",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/request"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__session",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/session"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__credentials__processcreds",
        ":github.com__aws__aws-sdk-go__aws__credentials__stscreds",
        ":github.com__aws__aws-sdk-go__aws__csm",
        ":github.com__aws__aws-sdk-go__aws__defaults",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__ini",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__signer__v4",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/signer/v4"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__internal__strings",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__ini",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/ini"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__awserr"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__arn",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__s3shared__arn",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared__arn",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared/arn"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__arn"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared__s3err",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared/s3err"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkio",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkio"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkmath",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkmath"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkrand",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkrand"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkuri",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkuri"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__shareddefaults",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/shareddefaults"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__strings",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/strings"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sync__singleflight",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sync/singleflight"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__checksum",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/checksum"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkmath",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__eventstream",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/eventstream"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__eventstream__eventstreamapi",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/eventstream/eventstreamapi"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/json/jsonutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__query",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/query"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__query__queryutil",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__query__queryutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/query/queryutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__private__protocol"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__rest",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/rest"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__strings",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__restxml",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/restxml"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/xml/xmlutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__arn",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__internal__s3shared",
        ":github.com__aws__aws-sdk-go__internal__s3shared__arn",
        ":github.com__aws__aws-sdk-go__internal__s3shared__s3err",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__private__checksum",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream__eventstreamapi",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
        ":github.com__aws__aws-sdk-go__private__protocol__restxml",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3__s3iface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3/s3iface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__s3",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3__s3manager",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3/s3manager"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__service__s3",
        ":github.com__aws__aws-sdk-go__service__s3__s3iface",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sts",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sts"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sts__stsiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sts/stsiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__sts",
    ],
)

go_mod_download(
    name = "github.com__golang__groupcache",
    _tag = "download",
    module = "github.com/golang/groupcache",
    version = "v0.0.0-20200121045136-8c9f03a8e57e",
)

go_module(
    name = "github.com__golang__groupcache__lru",
    download = ":_github.com__golang__groupcache#download",
    install = ["lru"],
    module = "github.com/golang/groupcache",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__protobuf",
    _tag = "download",
    module = "github.com/golang/protobuf",
    version = "v1.4.3",
)

go_module(
    name = "github.com__golang__protobuf__proto",
    download = ":_github.com__golang__protobuf#download",
    install = ["proto"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__any",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/any"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__duration",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/duration"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__timestamp",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/timestamp"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "github.com__google__wire",
    _tag = "download",
    module = "github.com/google/wire",
    version = "v0.4.0",
)

go_module(
    name = "github.com__google__wire",
    download = ":_github.com__google__wire#download",
    install = ["."],
    module = "github.com/google/wire",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__googleapis__gax-go",
    _tag = "download",
    module = "github.com/googleapis/gax-go",
    version = "v2.0.2+incompatible",
)

go_module(
    name = "github.com__googleapis__gax-go",
    download = ":_github.com__googleapis__gax-go#download",
    install = ["."],
    module = "github.com/googleapis/gax-go",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_mod_download(
    name = "github.com__jmespath__go-jmespath",
    _tag = "download",
    module = "github.com/jmespath/go-jmespath",
    version = "v0.4.0",
)

go_module(
    name = "github.com__jmespath__go-jmespath",
    download = ":_github.com__jmespath__go-jmespath#download",
    install = ["."],
    module = "github.com/jmespath/go-jmespath",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__oklog__run",
    _tag = "download",
    module = "github.com/oklog/run",
    version = "v1.1.0",
)

go_module(
    name = "github.com__oklog__run",
    download = ":_github.com__oklog__run#download",
    install = ["."],
    module = "github.com/oklog/run",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__pflag",
    _tag = "download",
    module = "github.com/spf13/pflag",
    version = "v1.0.5",
)

go_module(
    name = "github.com__spf13__pflag",
    download = ":_github.com__spf13__pflag#download",
    install = ["."],
    module = "github.com/spf13/pflag",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.opencensus.io",
    _tag = "download",
    module = "go.opencensus.io",
    version = "v0.22.5",
)

go_module(
    name = "go.opencensus.io",
    download = ":_go.opencensus.io#download",
    install = ["."],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__internal",
    download = ":_go.opencensus.io#download",
    install = ["internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io"],
)

go_module(
    name = "go.opencensus.io__internal__tagencoding",
    download = ":_go.opencensus.io#download",
    install = ["internal/tagencoding"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__metric__metricdata",
    download = ":_go.opencensus.io#download",
    install = ["metric/metricdata"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__resource"],
)

go_module(
    name = "go.opencensus.io__metric__metricproducer",
    download = ":_go.opencensus.io#download",
    install = ["metric/metricproducer"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__metric__metricdata"],
)

go_module(
    name = "go.opencensus.io__plugin__ocgrpc",
    download = ":_go.opencensus.io#download",
    install = ["plugin/ocgrpc"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__view",
        ":go.opencensus.io__tag",
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "go.opencensus.io__resource",
    download = ":_go.opencensus.io#download",
    install = ["resource"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__stats",
    download = ":_go.opencensus.io#download",
    install = ["stats"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__stats__internal",
        ":go.opencensus.io__tag",
    ],
)

go_module(
    name = "go.opencensus.io__stats__internal",
    download = ":_go.opencensus.io#download",
    install = ["stats/internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__tag"],
)

go_module(
    name = "go.opencensus.io__stats__view",
    download = ":_go.opencensus.io#download",
    install = ["stats/view"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__internal__tagencoding",
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__metric__metricproducer",
        ":go.opencensus.io__resource",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__internal",
        ":go.opencensus.io__tag",
    ],
)

go_module(
    name = "go.opencensus.io__tag",
    download = ":_go.opencensus.io#download",
    install = ["tag"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__trace",
    download = ":_go.opencensus.io#download",
    install = ["trace"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__groupcache__lru",
        ":go.opencensus.io__internal",
        ":go.opencensus.io__trace__internal",
        ":go.opencensus.io__trace__tracestate",
    ],
)

go_module(
    name = "go.opencensus.io__trace__internal",
    download = ":_go.opencensus.io#download",
    install = ["trace/internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__trace__propagation",
    download = ":_go.opencensus.io#download",
    install = ["trace/propagation"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__trace"],
)

go_module(
    name = "go.opencensus.io__trace__tracestate",
    download = ":_go.opencensus.io#download",
    install = ["trace/tracestate"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gocloud.dev",
    _tag = "download",
    module = "gocloud.dev",
    version = "v0.21.0",
)

go_module(
    name = "gocloud.dev__aws",
    download = ":_gocloud.dev#download",
    install = ["aws"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__session",
        ":github.com__google__wire",
    ],
)

go_module(
    name = "gocloud.dev__blob",
    download = ":_gocloud.dev#download",
    install = ["blob"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__view",
        ":go.opencensus.io__tag",
        ":gocloud.dev__blob__driver",
        ":gocloud.dev__gcerrors",
        ":gocloud.dev__internal__gcerr",
        ":gocloud.dev__internal__oc",
        ":gocloud.dev__internal__openurl",
    ],
)

go_module(
    name = "gocloud.dev__blob__driver",
    download = ":_gocloud.dev#download",
    install = ["blob/driver"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [":gocloud.dev__gcerrors"],
)

go_module(
    name = "gocloud.dev__blob__fileblob",
    download = ":_gocloud.dev#download",
    install = ["blob/fileblob"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":gocloud.dev__blob",
        ":gocloud.dev__blob__driver",
        ":gocloud.dev__gcerrors",
        ":gocloud.dev__internal__escape",
        ":gocloud.dev__internal__gcerr",
    ],
)

go_module(
    name = "gocloud.dev__blob__s3blob",
    download = ":_gocloud.dev#download",
    install = ["blob/s3blob"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__s3",
        ":github.com__aws__aws-sdk-go__service__s3__s3manager",
        ":github.com__google__wire",
        ":gocloud.dev__aws",
        ":gocloud.dev__blob",
        ":gocloud.dev__blob__driver",
        ":gocloud.dev__gcerrors",
        ":gocloud.dev__internal__escape",
    ],
)

go_module(
    name = "gocloud.dev__gcerrors",
    download = ":_gocloud.dev#download",
    install = ["gcerrors"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":gocloud.dev__internal__gcerr",
        ":golang.org__x__xerrors",
    ],
)

go_module(
    name = "gocloud.dev__internal__escape",
    download = ":_gocloud.dev#download",
    install = ["internal/escape"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gocloud.dev__internal__gcerr",
    download = ":_gocloud.dev#download",
    install = ["internal/gcerr"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":gocloud.dev__internal__retry",
        ":golang.org__x__xerrors",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "gocloud.dev__internal__oc",
    download = ":_gocloud.dev#download",
    install = ["internal/oc"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__plugin__ocgrpc",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__view",
        ":go.opencensus.io__tag",
        ":go.opencensus.io__trace",
        ":gocloud.dev__gcerrors",
    ],
)

go_module(
    name = "gocloud.dev__internal__openurl",
    download = ":_gocloud.dev#download",
    install = ["internal/openurl"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gocloud.dev__internal__retry",
    download = ":_gocloud.dev#download",
    install = ["internal/retry"],
    module = "gocloud.dev",
    visibility = ["PUBLIC"],
    deps = [":github.com__googleapis__gax-go"],
)

go_mod_download(
    name = "golang.org__x__net",
    _tag = "download",
    module = "golang.org/x/net",
    version = "v0.0.0-20201202161906-c7110b5ffcbb",
)

go_module(
    name = "golang.org__x__net__http__httpguts",
    download = ":_golang.org__x__net#download",
    install = ["http/httpguts"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__idna"],
)

go_module(
    name = "golang.org__x__net__http2",
    download = ":_golang.org__x__net#download",
    install = ["http2"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2__hpack",
        ":golang.org__x__net__http__httpguts",
        ":golang.org__x__net__idna",
    ],
)

go_module(
    name = "golang.org__x__net__http2__hpack",
    download = ":_golang.org__x__net#download",
    install = ["http2/hpack"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__idna",
    download = ":_golang.org__x__net#download",
    install = ["idna"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__secure__bidirule",
        ":golang.org__x__text__unicode__bidi",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__net__internal__timeseries",
    download = ":_golang.org__x__net#download",
    install = ["internal/timeseries"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__trace",
    download = ":_golang.org__x__net#download",
    install = ["trace"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__internal__timeseries"],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.0.0-20201202213521-69691e467435",
)

if is_platform(
    arch = ["amd64"],
    os = ["linux"],
):
    go_module(name = "golang.org__x__sys__internal__unsafeheader", download = ":_golang.org__x__sys#download", install = ["internal/unsafeheader"], module = "golang.org/x/sys", visibility = ["PUBLIC"], deps = [])

if is_platform(
    arch = ["amd64"],
    os = ["linux"],
):
    go_module(name = "golang.org__x__sys__unix", download = ":_golang.org__x__sys#download", install = ["unix"], module = "golang.org/x/sys", visibility = ["PUBLIC"], deps = select({":__config_darwin_amd64": [], ":__config_linux_amd64": [":golang.org__x__sys__internal__unsafeheader"], "default": []}))

go_mod_download(
    name = "golang.org__x__text",
    _tag = "download",
    module = "golang.org/x/text",
    version = "v0.3.4",
)

go_module(
    name = "golang.org__x__text__secure__bidirule",
    download = ":_golang.org__x__text#download",
    install = ["secure/bidirule"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__bidi",
    ],
)

go_module(
    name = "golang.org__x__text__transform",
    download = ":_golang.org__x__text#download",
    install = ["transform"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__bidi",
    download = ":_golang.org__x__text#download",
    install = ["unicode/bidi"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__norm",
    download = ":_golang.org__x__text#download",
    install = ["unicode/norm"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_mod_download(
    name = "golang.org__x__xerrors",
    _tag = "download",
    module = "golang.org/x/xerrors",
    version = "v0.0.0-20200804184101-5ec99f83aff1",
)

go_module(
    name = "golang.org__x__xerrors",
    download = ":_golang.org__x__xerrors#download",
    install = ["."],
    module = "golang.org/x/xerrors",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__xerrors__internal"],
)

go_module(
    name = "golang.org__x__xerrors__internal",
    download = ":_golang.org__x__xerrors#download",
    install = ["internal"],
    module = "golang.org/x/xerrors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "google.golang.org__genproto",
    _tag = "download",
    module = "google.golang.org/genproto",
    version = "v0.0.0-20201203001206-6486ece9c497",
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__status",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/rpc/status"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_mod_download(
    name = "google.golang.org__grpc",
    _tag = "download",
    module = "google.golang.org/grpc",
    version = "v1.34.0",
)

go_module(
    name = "google.golang.org__grpc",
    download = ":_google.golang.org__grpc#download",
    install = ["."],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__trace",
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__balancer__roundrobin",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__encoding",
        ":google.golang.org__grpc__encoding__proto",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__balancerload",
        ":google.golang.org__grpc__internal__binarylog",
        ":google.golang.org__grpc__internal__buffer",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__grpcsync",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__resolver",
        ":google.golang.org__grpc__internal__resolver__dns",
        ":google.golang.org__grpc__internal__resolver__passthrough",
        ":google.golang.org__grpc__internal__resolver__unix",
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__internal__transport",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__attributes",
    download = ":_google.golang.org__grpc#download",
    install = ["attributes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__balancer",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__base",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/base"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__grpclb__state",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/grpclb/state"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__balancer__roundrobin",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/roundrobin"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__binarylog__grpc_binarylog_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["binarylog/grpc_binarylog_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__grpc__codes",
    download = ":_google.golang.org__grpc#download",
    install = ["codes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__connectivity",
    download = ":_google.golang.org__grpc#download",
    install = ["connectivity"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__credentials",
    ],
)

go_module(
    name = "google.golang.org__grpc__encoding",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__encoding__proto",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding/proto"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__encoding",
    ],
)

go_module(
    name = "google.golang.org__grpc__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__balancerload",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/balancerload"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__internal__binarylog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/binarylog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__grpc__binarylog__grpc_binarylog_v1",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__buffer",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/buffer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__channelz",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/channelz"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal__envconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/envconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcrand",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcrand"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcsync",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcsync"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcutil",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcutil"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__dns",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/dns"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer__grpclb__state",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__passthrough",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/passthrough"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__unix",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/unix"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__status",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__syscall",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/syscall"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__transport",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":golang.org__x__net__http2",
        ":golang.org__x__net__http2__hpack",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__syscall",
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__transport__networktype",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport/networktype"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__keepalive",
    download = ":_google.golang.org__grpc#download",
    install = ["keepalive"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__peer",
    download = ":_google.golang.org__grpc#download",
    install = ["peer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__status",
    download = ":_google.golang.org__grpc#download",
    install = ["status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__internal__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__tap",
    download = ":_google.golang.org__grpc#download",
    install = ["tap"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "google.golang.org__protobuf",
    _tag = "download",
    module = "google.golang.org/protobuf",
    version = "v1.25.0",
)

go_module(
    name = "google.golang.org__protobuf__encoding__prototext",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/prototext"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__mapsort",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__set",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protowire",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protowire"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__errors"],
)

go_module(
    name = "google.golang.org__protobuf__internal__descfmt",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descfmt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__descopts",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descopts"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__detrand",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/detrand"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__defval",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/defval"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__messageset",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/messageset"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__tag",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/tag"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__text",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/text"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__strs",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__errors",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/errors"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__detrand"],
)

go_module(
    name = "google.golang.org__protobuf__internal__fieldsort",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/fieldsort"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__filedesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filedesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descfmt",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__filetype",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filetype"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__flags",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/flags"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__genid",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/genid"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__impl",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/impl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__tag",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__fieldsort",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__mapsort",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/mapsort"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__pragma",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/pragma"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__set",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/set"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__strs",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/strs"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__version",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/version"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__proto",
    download = ":_google.golang.org__protobuf#download",
    install = ["proto"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__fieldsort",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__mapsort",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoreflect",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoreflect"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__pragma",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoregistry",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoregistry"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoiface",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoiface"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoimpl",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoimpl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__filetype",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__internal__version",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__anypb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/anypb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__durationpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/durationpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__timestamppb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/timestamppb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)
